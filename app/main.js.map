{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/layout/layout.component.ts","./src/app/components/layout/layout.component.html","./src/app/components/logs/logs.component.ts","./src/app/components/logs/logs.component.html","./src/app/components/steps/step-status/step-status.component.ts","./src/app/components/steps/step-status/step-status.component.html","./src/app/components/steps/steps.component.ts","./src/app/components/steps/steps.component.html","./src/app/components/toolbar/toolbar.component.ts","./src/app/components/toolbar/toolbar.component.html","./src/app/components/view/view.component.ts","./src/app/components/view/view.component.html","./src/app/core/interfaces.ts","./src/app/core/services/http.service.ts","./src/app/core/services/utils.service.ts","./src/app/core/services/websocket.service.ts","./src/app/environments/environment.ts","./src/app/material.module.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, AfterViewInit, ViewChild, ElementRef, Renderer2, OnInit } from '@angular/core';\nimport { DIPTest } from './core/interfaces';\nimport { HttpService } from './core/services/http.service';\nimport { UtilsService } from './core/services/utils.service';\nimport { Subscription } from 'rxjs';\nimport { WebsocketService } from './core/services/websocket.service';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\tisTestsLoading = false;\n\n\tisTestStarted = false;\n\tisTestStoped = false;\n\tprotected isTestInProgress(): boolean {\n\t\treturn this.isTestStarted && !this.isTestStoped;\n\t}\n\n\ttests: DIPTest[] = [];\n\tselectedTest: DIPTest | undefined;\n\n\tlogFileContent: any = '';\n\tstatusFileContent: any = '';\n\n\tprivate subscription!: Subscription;\n\tconstructor(private websocketService: WebsocketService, private utilsService: UtilsService) { }\n\n\tngOnInit(): void {\n\t\t// this.getTests();\n\t\tthis.listenWebsocketConnection();\n\t}\n\n\tprivate listenWebsocketConnection(): void {\n\t\tthis.isTestsLoading = true;\n\t\tthis.subscription = this.websocketService.listen().subscribe({\n\t\t\tnext: (socketData) => {\n\t\t\t\tconsole.log('listen websocket', socketData);\n\t\t\t\tthis.isTestsLoading = false;\n\t\t\t\tthis.distributeDatas(socketData);\n\t\t\t},\n\t\t\terror: (err) => {\n\t\t\t\tconsole.error('ERROR - listen websocket', err);\n\t\t\t\tthis.utilsService.showSnackMessage('ERROR - listen websocket : '+err, 'OK');\n\t\t\t},\n\t\t\tcomplete: () => {\n\t\t\t\tconsole.log('listen websocket complete');\n\t\t\t\tthis.isTestsLoading = false;\n\t\t\t},\n\t\t});\n\t}\n\n\tonSelectChange(test: DIPTest): void {\n\t\tthis.selectedTest = test;\n\t}\n\tonStartTest(test: DIPTest): void {\n\t\tconsole.log('start Test', test);\n\t}\n\tonStopTest(test: DIPTest): void {\n\t\tconsole.log('stop test', test);\n\t}\n\n\tprivate distributeDatas(socketData: any): void {\n\t\tswitch(socketData.type){\n\t\t\tcase 'join':\n\t\t\t\tthis.joinConnection(socketData);\n\t\t\t\tbreak;\n\t\t\tcase 'message':\n\t\t\t\tthis.receiveMessage(socketData);\t\t\t\t\t\n\t\t\t\tbreak;\n\t\t\tcase 'startTest':\n\t\t\t\tthis.testStarted(socketData);\n\t\t\t\tbreak;\n\t\t\tcase 'stopTest':\n\t\t\t\tthis.testStoped(socketData);\n\t\t\t\tbreak;\n\t\t\tcase 'readLogFile':\n\t\t\t\tthis.readLogFile(socketData);\n\t\t\t\tbreak;\n\t\t\tcase 'readStatusFile':\n\t\t\t\tthis.readStatusFile(socketData);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.error('unknown type', socketData.type);\n\t\t\t\tthis.utilsService.showSnackMessage('unknown type comming from websocket: '+socketData.type, 'OK');\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate joinConnection(socketData: any): void {\n\t\tconsole.log('joinConnection');\n\t\tif(!socketData.data || socketData.data.connected !== true){\n\t\t\tthis.utilsService.showSnackMessage('connection with websocket cannot be established', 'OK');\n\t\t\treturn;\n\t\t}\n\n\t\tif(!socketData.data.tests){\n\t\t\tthis.utilsService.showSnackMessage('no tests found', 'OK');\n\t\t\treturn;\n\t\t}\n\n\t\tthis.utilsService.showSnackMessage('connection with websocket established', 'OK', 5);\n\t\tthis.tests = socketData.data.tests;\n\t}\n\n\tprivate receiveMessage(socketData: any): void {\n\t\tconsole.log('receiveMessage', socketData);\n\n\t\tif(!socketData.data.message){\n\t\t\tconsole.error('no message found in socketData', socketData);\n\t\t\tthis.utilsService.showSnackMessage('no message found in socketData', 'OK');\n\t\t\treturn;\n\t\t}\n\n\t\tthis.utilsService.showSnackMessage(socketData.data.message, 'OK');\n\t}\n\n\tprivate testStarted(socketData: any): void {\n\t\tconsole.log('testStarted', socketData);\n\t\tthis.isTestStarted = true;\n\t\tthis.isTestStoped = false;\n\t}\n\tprivate testStoped(socketData: any): void {\n\t\tconsole.log('testStoped', socketData);\n\t\tthis.isTestStarted = false;\n\t\tthis.isTestStoped = true;\n\t}\n\t\n\tprivate readLogFile(socketData: any): void {\n\t\tconsole.log('readLogFile', socketData);\n\t\tthis.logFileContent = socketData.data;\n\t}\n\n\tprivate readStatusFile(socketData: any): void {\n\t\tconsole.log('readStatusFile', socketData);\n\t\tthis.statusFileContent = JSON.parse(socketData.data);\n\t}\n}\n","<div class=\"layout\">\n\t<div class=\"header\">\n\t\t<app-toolbar \n\t\t\t[tests]=\"tests\"\n\t\t\t[isLoading]=\"isTestsLoading\"\n\t\t\t[isTestStarted]=\"isTestStarted\"\n\t\t\t[isTestStoped]=\"isTestStoped\"\n\t\t\t(selectChange)=\"onSelectChange($event)\" \n\t\t\t(startTest)=\"onStartTest($event)\"\n\t\t\t(stopTest)=\"onStopTest($event)\"\n\t\t></app-toolbar>\n\t</div>\n\t<mat-progress-bar mode=\"indeterminate\" *ngIf=\"isTestInProgress()\"></mat-progress-bar>\n\t<div class=\"main\">\n\t\t<div class=\"content\">\n\t\t\t\n\t\t\t<div class=\"content-top\">\n\t\t\t\t<app-view [test]=\"selectedTest\"></app-view>\n\t\t\t</div>\n\t\t\t<div class=\"content-bottom\">\n\t\t\t\t<app-logs [test]=\"selectedTest\" [fileContent]=\"logFileContent\"></app-logs>\n\t\t\t</div>\n\n\t\t</div>\n\t\t<div class=\"sidebar\">\n\t\t\t<app-steps [test]=\"selectedTest\" [fileContent]=\"statusFileContent\"></app-steps>\n\t\t</div>\n\t</div>\n\t<!-- <div class=\"footer\">\n\t\t<app-footer></app-footer>\n\t</div> -->\n</div>","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MaterialModule } from './material.module';\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\nimport { LogsComponent } from './components/logs/logs.component';\nimport { StepsComponent } from './components/steps/steps.component';\nimport { ViewComponent } from './components/view/view.component';\nimport { LayoutComponent } from './components/layout/layout.component';\nimport { FooterComponent } from './components/footer/footer.component';\n\nimport { HttpService } from './core/services/http.service';\nimport { StepStatusComponent } from './components/steps/step-status/step-status.component';\n\n\n\n@NgModule({\n\tdeclarations: [\n\t\tAppComponent,\n\t\tLayoutComponent,\n\t\tToolbarComponent,\n\t\tFooterComponent,\n\t\tLogsComponent,\n\t\tStepsComponent,\n\t\tViewComponent,\n  StepStatusComponent,\n\t],\n\timports: [\n\t\tHttpClientModule,\n\t\tBrowserModule,\n\t\tBrowserAnimationsModule,\n\t\tAppRoutingModule,\n\t\tMaterialModule,\n\t\tFormsModule, ReactiveFormsModule,\n\t],\n\tproviders: [HttpService],\n\tbootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent {\n\n}\n","<mat-toolbar>\n    <!-- <span>My Application</span> -->\n</mat-toolbar>","import { Component, ContentChildren, ElementRef, Input, QueryList } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent {\n\n\t@ContentChildren('header', { read: ElementRef }) headerContent!: ElementRef;\n\t@ContentChildren('body', { read: ElementRef }) bodyContent!: ElementRef;\n\t@ContentChildren('actions', { read: ElementRef }) actionsContent!: ElementRef;\n\t@ContentChildren('footer', { read: ElementRef }) footerContent!: ElementRef;\n\n\t@Input() actionAlign: 'start' | 'end' = 'start';\n\n\thasHeader(): boolean {\n\t\treturn !!this.headerContent;\n\t}\n\n\thasBody(): boolean {\n\t\treturn !!this.bodyContent;\n\t}\n\n\thasActions(): boolean {\n\t\treturn !!this.actionsContent;\n\t}\n\n\thasFooter(): boolean {\n\t\treturn !!this.footerContent;\n\t}\n}\n","<mat-card class=\"layout-container\">\n\t<mat-card-header class=\"layout-header\" *ngIf=\"hasHeader()\">\n\t\t<ng-content select=\".header\" #header></ng-content>\n\t</mat-card-header>\n\t<mat-card-content class=\"layout-content\" *ngIf=\"hasBody()\">\n\t\t<ng-content select=\".body\" #body></ng-content>\n\t</mat-card-content>\n\t<mat-card-actions *ngIf=\"hasActions()\" [align]=\"actionAlign\">\n\t\t<ng-content select=\".actions\" #actions></ng-content>\n\t</mat-card-actions>\n\t<mat-card-footer class=\"layout-footer\" *ngIf=\"hasFooter()\">\n\t\t<ng-content select=\".footer\" #footer></ng-content>\n\t</mat-card-footer>\n</mat-card>","import { Component, Input, OnChanges, OnInit, OnDestroy } from '@angular/core';\nimport { DIPTest } from 'src/app/core/interfaces';\nimport { HttpService } from 'src/app/core/services/http.service';\nimport { WebsocketService } from 'src/app/core/services/websocket.service';\n\nimport { Subscription } from 'rxjs';\nimport { UtilsService } from 'src/app/core/services/utils.service';\n\n@Component({\n  selector: 'app-logs',\n  templateUrl: './logs.component.html',\n  styleUrls: ['./logs.component.scss']\n})\nexport class LogsComponent implements OnInit, OnChanges {\n\tisLoading: boolean = false;\n\n\t@Input() test: DIPTest | undefined;\n\n\t@Input() fileContent: any = '';\n\tconstructor(private websocketService: WebsocketService) { }\n\n\tngOnInit(): void { }\n\n\tngOnChanges(changes: any): void {\n\t\tconsole.log('[logs] ngOnChanges', changes);\n\n\t\tif(changes.test && changes.test.currentValue !== changes.test.previousValue){\n\t\t\tthis.askForLogFileContent(changes.test.currentValue);\n\t\t}\n\t}\n\n\tprivate askForLogFileContent(test: DIPTest): void {\n\t\tconsole.log('askForLogFileContent', test);\n\n\t\tthis.websocketService.sendMessage({\n\t\t\tsender: 'client',\n\t\t\ttype: 'askLogFile',\n\t\t\tdata: test\n\t\t});\n\t}\n\n\tprotected clearLog(): void {\n\t\tthis.fileContent = '';\n\t}\n}\n","<app-layout actionAlign=\"start\">\n\t<div class=\"header\">\n\t\t<h2>\n\t\t\tLogs\n\t\t\t<span *ngIf=\"test\">for \"{{ test.label }}\"</span>\n\t\t\t<small *ngIf=\"test?.logFile\"> ({{ test?.logFile }})</small>\n\t\t</h2>\n\t\t<mat-spinner *ngIf=\"isLoading\" class=\"mat-spinner\"></mat-spinner>\n\t</div>\n\t<div class=\"body\">\n\t\t<pre> {{fileContent}} </pre>\n\t</div>\n\t<div class=\"actions\">\n\t\t<button mat-button color=\"primary\" [disabled]=\"isLoading\" (click)=\"clearLog()\">Clear</button>\n\t</div>\n</app-layout>","import { Component, Input } from '@angular/core';\nimport { CommandStatus } from 'src/app/core/interfaces';\n\n@Component({\n\tselector: 'app-step-status',\n\ttemplateUrl: './step-status.component.html',\n\tstyleUrls: ['./step-status.component.scss']\n})\nexport class StepStatusComponent {\n\n\t@Input() status!: CommandStatus | number;\n\n\tconstructor() { }\n\n\tprotected getNodeStatus(): CommandStatus {\n\t\tif(!this.status){\n\t\t\treturn CommandStatus.UNDEFINED;\n\t\t}\n\n\t\tif(typeof this.status === 'string'){\n\t\t\treturn this.status;\n\t\t}else if(typeof this.status === 'number'){\n\t\t\tif(this.status < 0){\n\t\t\t\treturn CommandStatus.STOPED;\n\t\t\t}else if(this.status > 0){\n\t\t\t\treturn CommandStatus.STARTED;\n\t\t\t}else if(this.status === 0){\n\t\t\t\treturn CommandStatus.PAUSED;\n\t\t\t}else{\n\t\t\t\treturn CommandStatus.STOPED;\n\t\t\t}\n\t\t}else{\n\t\t\treturn CommandStatus.UNDEFINED;\n\t\t}\n\t}\n}\n","<div class=\"nodeStatus\">\n\t<ng-content></ng-content>\n\t<p>{{getNodeStatus()}}</p>\n</div>","import { AfterViewInit, Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { DIPTest, StatusTest, StepStatus, Command, CommandStatus } from 'src/app/core/interfaces';\n\nimport {NestedTreeControl} from '@angular/cdk/tree';\nimport {MatTreeNestedDataSource} from '@angular/material/tree';\nimport { Subscription } from 'rxjs';\nimport { HttpService } from 'src/app/core/services/http.service';\nimport { WebsocketService } from 'src/app/core/services/websocket.service';\nimport { UtilsService } from 'src/app/core/services/utils.service';\n\n\ninterface TreeNode {\n\tname: string;\n\tlevel?: number;\n\tstatus?: number;\n\tchildren?: TreeNode[];\n}\ninterface FlatNode {\n\texpandable: boolean;\n\tname: string;\n\tlevel: number;\n\tstatus?: number;\n}\n\n@Component({\n  selector: 'app-steps',\n  templateUrl: './steps.component.html',\n  styleUrls: ['./steps.component.scss']\n})\nexport class StepsComponent implements OnInit, OnChanges {\n\ttreeControl = new NestedTreeControl<TreeNode>(node => node.children);\n\tdataSource = new MatTreeNestedDataSource<any>();\n\n\t// commandStatus: CommandStatus = CommandStatus.STOPED;\n\n\tisLoading: boolean = false;\n\n\t@Input() test: DIPTest | undefined;\n\n\t@Input() fileContent: any = '';\n\tprotected formatedStatus: StatusTest | undefined;\n\t// protected steps: Step[] = [];\n\n\n\tconstructor(private websocketService: WebsocketService, private utilsService: UtilsService) { }\n\n\tngOnInit(): void { }\n\n\tngOnChanges(changes: any): void {\n\t\tconsole.log('[steps] ngOnChanges', changes);\n\n\t\tif(changes.test && changes.test.currentValue !== changes.test.previousValue){\n\t\t\tthis.askForStatusFileContent(changes.test.currentValue);\n\t\t}\n\n\n\t\tif(changes.fileContent && changes.fileContent.currentValue && changes.fileContent.currentValue !== changes.fileContent.previousValue){\n\t\t\tconsole.log('fileContent', changes.fileContent.currentValue);\n\t\t\tthis.detectAndFormatSteps(changes.fileContent.currentValue);\n\n\t\t}\n\t}\n\n\tprivate askForStatusFileContent(test: DIPTest): void {\n\t\tconsole.log('askForStatusFileContent', test);\n\n\t\tthis.websocketService.sendMessage({\n\t\t\tsender: 'client',\n\t\t\ttype: 'askStatusFile',\n\t\t\tdata: test\n\t\t});\n\t}\n\n\tprotected clearStatus(): void {\n\t\tthis.fileContent = '';\n\t}\n\n\tprivate detectAndFormatSteps(data: any): void {\n\t\tconst formatedStatus = this.formatStepStatus(data);\n\t\tconsole.log('formatedStatus', formatedStatus);\n\t\tif(!formatedStatus){\n\t\t\tthis.utilsService.showSnackMessage('ERROR - detectAndFormatSteps : wrong file format', 'OK');\n\t\t\treturn;\n\t\t}\n\t\tthis.formatedStatus = formatedStatus;\n\n\t\tthis.updateTree();\n\t}\n\n\tprivate formatStepStatus(data: any): StatusTest {\n\t\tconsole.log('formatStepStatus', data);\n\t\treturn data as StatusTest;\n\t}\n\n\t// MAT TREE\n\tprotected hasChild = (_: number, node: TreeNode) => !!node.children && node.children.length > 0;\n\t// protected getNodeStatus(status: number): CommandStatus {\n\t// \tconsole.log('getNodeStatus', status);\n\n\t// \tif(status < 0){\n\t// \t\treturn CommandStatus.STOPED;\n\t// \t}else if(status > 0){\n\t// \t\treturn CommandStatus.STARTED;\n\t// \t}else if(status === 0){\n\t// \t\treturn CommandStatus.PAUSED;\n\t// \t}else{\n\t// \t\treturn CommandStatus.STOPED;\n\t// \t}\n\t// }\n\tprotected updateTree(): void {\n\t\tthis.isLoading = true;\n\t\tthis.dataSource.data = [];\n\t\tif(!this.formatedStatus){\n\t\t\tconsole.warn('formatedStatus is undefined')\n\t\t\tthis.isLoading = false;\n\t\t\treturn;\n\t\t}\n\t\tconst nodes = this._transformer(this.formatedStatus);\n\t\tif(nodes && nodes.length > 0)\n\t\t\tthis.dataSource.data = nodes;\n\n\t\tthis.isLoading = false;\n\t}\n\n\tprivate _transformer(testStatus: StatusTest): TreeNode[] | undefined {\n\t\tif(!testStatus){\n\t\t\tconsole.warn('test is undefined')\n\t\t\treturn;\n\t\t}\n\t\tif(!testStatus.steps){\n\t\t\tconsole.warn('test.steps is undefined')\n\t\t\treturn;\n\t\t}\n\n\t\tlet steps: TreeNode[] = []\n\t\ttestStatus.steps.forEach((step: StepStatus) => {\n\t\t\tconst commands: TreeNode[] = [];\n\n\t\t\tstep.values.forEach((command: Command) => {\n\t\t\t\tcommands.push({\n\t\t\t\t\tname: command.id,\n\t\t\t\t\tlevel: 2,\n\t\t\t\t\tstatus: command.status ? command.status : 0,\n\t\t\t\t});\n\t\t\t});\n\t\t\t\n\t\t\tsteps.push({\n\t\t\t\tname: step.key,\n\t\t\t\tlevel: 1,\n\t\t\t\tstatus: step.status ? step.status : 0,\n\t\t\t\tchildren: commands,\n\t\t\t});\n\t\t});\n\t\t\n\t\treturn steps;\n\t};\n}\n","<app-layout actionAlign=\"end\">\n\t<div class=\"header\">\n\t\t<h2>Steps</h2>\n\t</div>\n\t<div class=\"body\">\n\n\t\t<mat-tree #mytree class=\"tree\" [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n\t\t\t<mat-tree-node *matTreeNodeDef=\"let childNode\" matTreeNodeToggle>\n\t\t\t\t<!-- <p>{{childNode.name}} -> {{childNode.status}}</p> -->\n\t\t\t\t<app-step-status [status]=\"childNode.status\">{{childNode.name}}</app-step-status>\n\t\t\t</mat-tree-node>\n\t\t\t<mat-nested-tree-node *matTreeNodeDef=\"let parentNode; when: hasChild\">\n\t\t\t\t<div class=\"mat-tree-node\">\n\t\t\t\t\t<button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'Toggle ' + parentNode.name\">\n\t\t\t\t\t\t<mat-icon class=\"mat-icon-rtl-mirror\">\n\t\t\t\t\t\t\t{{treeControl.isExpanded(parentNode) ? 'expand_more' : 'chevron_right'}} \n\t\t\t\t\t\t</mat-icon>\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<!-- <p>{{parentNode.name}} - {{parentNode.status}}</p> -->\n\t\t\t\t\t<app-step-status [status]=\"parentNode.status\">{{parentNode.name}}</app-step-status>\n\t\t\t\t</div>\n\t\t\t\t<div [class.tree-invisible]=\"!treeControl.isExpanded(parentNode)\" role=\"group\">\n\t\t\t\t\t<ng-container matTreeNodeOutlet></ng-container>\n\t\t\t\t</div>\n\t\t\t</mat-nested-tree-node>\n\t\t</mat-tree>\n\n\t</div>\n\t<div class=\"actions\">\n\t\t<button mat-button (click)=\"clearStatus()\">Clear</button>\n\t</div>\n\t<div class=\"footer\">\n\t\t<mat-progress-bar mode=\"indeterminate\" *ngIf=\"isLoading\"></mat-progress-bar>\n\t</div>\n</app-layout>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { delay, Observable } from 'rxjs';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { DIPTest } from 'src/app/core/interfaces';\nimport { HttpService } from 'src/app/core/services/http.service';\nimport { environment } from 'src/app/environments/environment';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent implements OnInit {\n\tappName: string = environment.appName;\n\t@Input() isLoading: boolean = false;\n\t@Input() isTestStarted: boolean = false;\n\t@Input() isTestStoped: boolean = false;\n\n\t@Input() tests: DIPTest[] | null = [];\n\t@Output() selectChange = new EventEmitter<DIPTest>();\n\n\tselectedTest: DIPTest | undefined;\n\n\tprotected headerForm!: FormGroup;\n\tprotected testCtrl!: FormControl;\n\n\t@Output() startTest = new EventEmitter<DIPTest>();\n\t@Output() stopTest = new EventEmitter<DIPTest>();\n\n\n\tsocketConnections$: Observable<any> | undefined;\n\tsocketConnections: any = 0;\n\n\n\tconstructor(private formBuilder: FormBuilder, private httpService: HttpService) {\n\t\tthis.testCtrl = this.formBuilder.control('');\n\n\t\tthis.headerForm = this.formBuilder.group({\n\t\t\ttest: this.testCtrl,\n\t\t});\n\n\t\tthis.testCtrl.valueChanges.subscribe((value) => {\n\t\t\tconst test = this.tests?.find((test) => test.id === value);\n\t\t\tif(test){\n\t\t\t\tthis.selectedTest = test;\n\t\t\t\tthis.selectChange.emit(test);\n\t\t\t}else{\n\t\t\t\tconsole.warn('Test not found')\n\t\t\t}\n\t\t});\n\t}\n\n\tngOnInit(): void {\n\t\tif(this.tests && this.tests.length <= 0){\n\t\t\tconsole.warn('No tests to show');\n\t\t}\n\t}\n\n\tOnStartTest(): void {\n\t\tthis.startTest.emit(this.selectedTest);\n\t}\n\tOnStopTest(): void {\n\t\tthis.stopTest.emit(this.selectedTest);\n\t}\n\n\n}\n","<mat-toolbar>\n\t<span class=\"title\">{{ appName }}</span>\n\n\t<span class=\"spacer\"></span>\n\n\t<mat-spinner *ngIf=\"isLoading\" class=\"mat-spinner\"></mat-spinner>\n\n\t<div [formGroup]=\"headerForm\" #formDirective=\"ngForm\" *ngIf=\"!isLoading && tests && tests.length > 0\">\n\t\t<mat-form-field hintLabel=\"Used to select a test to execute\">\n\t\t\t<mat-label>Test</mat-label>\n\t\t\t<mat-select formControlName=\"test\" class=\"col\">\n\t\t\t\t<mat-option *ngFor=\"let test of tests\" [value]=\"test.id\">\n\t\t\t\t\t{{ test.label }}\n\t\t\t\t</mat-option>\n\t\t\t</mat-select>\n\t\t</mat-form-field>\n\t\n\t\t<button mat-flat-button color=\"primary\" *ngIf=\"selectedTest && !isTestStarted\" (click)=\"OnStartTest()\">\n\t\t\tStart\n\t\t</button>\n\t\t<button mat-flat-button color=\"warn\" *ngIf=\"selectedTest && isTestStarted\" (click)=\"OnStopTest()\">\n\t\t\tStop\n\t\t</button>\n\n\t</div>\n</mat-toolbar>","import { Component, Input } from '@angular/core';\nimport { DIPTest } from 'src/app/core/interfaces';\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.scss']\n})\nexport class ViewComponent {\n\n\t@Input() test: DIPTest | undefined;\n\n\t@Input() isTestStarted!: boolean;\n\t@Input() isTestStoped!: boolean;\n}\n","<app-layout actionAlign=\"end\">\n\t<div class=\"header\">\n\t\t<h2>\n\t\t\tDIP\n\t\t\t<span *ngIf=\"test\"> \"{{ test.label }}\"</span>\n\t\t</h2>\n\t</div>\n\t<div class=\"body\">\n\n\t\t<div class=\"infos\">\n\n\t\t</div>\n\n\t\t<img *ngIf=\"test && test.image\" class=\"dip-img\" [src]=\"test.image\" alt=\"\">\n\t</div>\n</app-layout>","export interface DIPTest {\n\tid: string;\n\tlabel: string;\n\timage: string;\n\tlogFile?: string;\n\tstatusFile?: string;\n}\n\nexport interface StatusTest {\n\tid: number;\n\tlabel?: string;\n\tstatus: number;\n\tprogress: number;\n\tsteps: StepStatus[];\n}\n\nexport interface StepStatus {\n\tkey: string;\n\tstatus?: number;\n\tvalues: Command[];\n}\n\nexport interface Command {\n\tid: string;\n\tstatus?: number;\n}\n\nexport enum CommandStatus {\n\tUNDEFINED = \"UNDEFINED\",\n\tPAUSED = \"PAUSED\",\n\tSTARTED = \"STARTED\",\n\tSTOPED = \"STOPED\",\n\tEND = \"END\",\n\tERROR = \"ERROR\",\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { delay, Observable } from 'rxjs';\nimport { DIPTest } from '../interfaces';\nimport { environment } from '../../environments/environment';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\tprivate url = `${environment.apiUrl}`;\n\n\tconstructor(private http: HttpClient) { }\n\n\n\t// TESTS\n\tpublic getTests(): Observable<DIPTest[]> {\n\t\tconst url = `${this.url}/tests`;\n\t\treturn this.http.get<DIPTest[]>(url);\n\t}\n\n\tpublic getTest(id: number): Observable<DIPTest> {\n\t\tconst url = `${this.url}/tests/${id}`;\n\t\treturn this.http.get<DIPTest>(url);\n\t}\n\n\t// START / STOP TEST\n\tpublic startTest(test: DIPTest): Observable<any> {\n\t\tconst url = `${this.url}/start/${test.id}`;\n\t\treturn this.http.get(url, { responseType: 'text' });\n\t}\n\tpublic stopTest(test: DIPTest): Observable<any> {\n\t\tconst url = `${this.url}/stop/${test.id}`;\n\t\treturn this.http.get(url, { responseType: 'text' });\n\t}\n\n\t// RESULTS\n\tpublic listenTest(test: DIPTest): Observable<any> {\n\t\tconst url = `${this.url}/listen`;\n\t\t// const body = {test: test};\n\t\treturn this.http.post<any>(url, test);\n\t}\n\n\n\t// CONNECTIONS\n\t// public getSocketConnections(): Observable<any> {\n\t// \tconst url = `${this.url}/connections`;\n\t// \treturn this.http.get<any>(url);\n\t// }\n\t// public countSocketConnections(): Observable<any> {\n\t// \tconst url = `${this.url}/connections/count`;\n\t// \treturn this.http.get<any>(url);\n\t// }\n\t// public getSocketConnection(id: string): Observable<any> {\n\t// \tconst url = `${this.url}/connections/id/${id}`;\n\t// \treturn this.http.get<any>(url);\n\t// }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilsService {\n\n  \tconstructor(private _snackBar: MatSnackBar) { }\n\n\tshowSnackMessage(message: string, action: string, duration?: number) {\n\t\tif(duration){\n\t\t\tthis._snackBar.open(message, action, {duration: duration * 1000});\n\t\t}else{\n\t\t\tthis._snackBar.open(message, action);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\nimport { delay, Observable } from 'rxjs';\nimport { environment } from 'src/app/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsocketService {\n\n\tprivate socket$!: WebSocketSubject<any>;\n\n  \tconstructor() { \n\t\t\n\t}\n\n\tpublic listen(): Observable<any> {\n\t\treturn new Observable((subscriber) => {\n\t\t\tthis.socket$ = webSocket(environment.websocketURL);\n\n\t\t\tconst messageSubscription = this.socket$.subscribe({\n\t\t\t\tnext: (data) => {\n\t\t\t\t\t// console.log('Message reçu :', data)\n\t\t\t\t\tsubscriber.next(data);\n\t\t\t\t},\n\t\t\t\terror: (err) => {\n\t\t\t\t\t// console.error('Erreur WebSocket :', err);\n\t\t\t\t\tsubscriber.error(err);\n\t\t\t\t},\n\t\t\t\tcomplete: () => {\n\t\t\t\t\tsubscriber.complete();\n\t\t\t\t},\n\t\t\t});\n\t  \n\t\t\t// Nettoyage lors de la désinscription de l'Observable\n\t\t\treturn () => {\n\t\t\t\tmessageSubscription.unsubscribe();\n\t\t\t\tif (this.socket$) {\n\t\t\t\t\tthis.socket$.complete();\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}\n\t\n\n\tpublic sendMessage(data: any) {\n\t\tthis.socket$.next(data);\n\t}\n}\n","interface IEnvironment {\n    production: boolean;\n    useMocks: boolean;\n    apiUrl: string;\n\twebsocketURL: string;\n    appName: string;\n}\n\nexport const environment: IEnvironment = {\n    production: false,\n    useMocks: false,\n    apiUrl: 'http://127.0.0.1:3000/api',\n\twebsocketURL: 'ws://localhost:8080',\n    appName: 'DIP Test server',\n};\n","import {NgModule} from '@angular/core';\n\nimport {MatGridListModule} from '@angular/material/grid-list';\n\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\n\nimport {MatTreeModule} from '@angular/material/tree';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatChipsModule} from '@angular/material/chips';\n\n\n@NgModule({\n\timports: [\n\t\tMatGridListModule,\n\t\tMatToolbarModule,\n\t\tMatCardModule,\n\t\tMatDividerModule,\n\t\tMatButtonModule,\n\t\tMatIconModule,\n\t\tMatProgressBarModule,\n\t\tMatSelectModule,\n\t\tMatTreeModule,\n\t\tMatCheckboxModule,\n\t\tMatProgressSpinnerModule,\n\t\tMatSnackBarModule,\n\t\tMatChipsModule,\n\t],\n\texports: [\n\t\tMatGridListModule,\n\t\tMatToolbarModule,\n\t\tMatCardModule,\n\t\tMatDividerModule,\n\t\tMatButtonModule,\n\t\tMatIconModule,\n\t\tMatProgressBarModule,\n\t\tMatSelectModule,\n\t\tMatTreeModule,\n\t\tMatCheckboxModule,\n\t\tMatProgressSpinnerModule,\n\t\tMatSnackBarModule,\n\t\tMatChipsModule,\n\t]\n})\nexport class MaterialModule {}","import 'hammerjs';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","routes","AppRoutingModule","forRoot","imports","i1","exports","i0","ɵɵelement","AppComponent","isTestInProgress","isTestStarted","isTestStoped","constructor","websocketService","utilsService","isTestsLoading","tests","logFileContent","statusFileContent","ngOnInit","listenWebsocketConnection","subscription","listen","subscribe","next","socketData","console","log","distributeDatas","error","err","showSnackMessage","complete","onSelectChange","test","selectedTest","onStartTest","onStopTest","type","joinConnection","receiveMessage","testStarted","testStoped","readLogFile","readStatusFile","data","connected","message","JSON","parse","ɵɵdirectiveInject","WebsocketService","i2","UtilsService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AppComponent_Template_app_toolbar_selectChange_2_listener","$event","AppComponent_Template_app_toolbar_startTest_2_listener","AppComponent_Template_app_toolbar_stopTest_2_listener","ɵɵelementEnd","ɵɵtemplate","AppComponent_mat_progress_bar_3_Template","ɵɵadvance","ɵɵproperty","HttpClientModule","BrowserModule","BrowserAnimationsModule","FormsModule","ReactiveFormsModule","MaterialModule","ToolbarComponent","LogsComponent","StepsComponent","ViewComponent","LayoutComponent","FooterComponent","HttpService","StepStatusComponent","AppModule","bootstrap","declarations","FooterComponent_Template","ElementRef","ɵɵprojection","ctx_r2","actionAlign","hasHeader","headerContent","hasBody","bodyContent","hasActions","actionsContent","hasFooter","footerContent","contentQueries","LayoutComponent_ContentQueries","dirIndex","LayoutComponent_mat_card_header_1_Template","LayoutComponent_mat_card_content_2_Template","LayoutComponent_mat_card_actions_3_Template","LayoutComponent_mat_card_footer_4_Template","ɵɵtext","ɵɵtextInterpolate1","ctx_r0","label","ctx_r1","logFile","isLoading","fileContent","ngOnChanges","changes","currentValue","previousValue","askForLogFileContent","sendMessage","sender","clearLog","inputs","features","ɵɵNgOnChangesFeature","LogsComponent_Template","LogsComponent_span_4_Template","LogsComponent_small_5_Template","LogsComponent_mat_spinner_6_Template","LogsComponent_Template_button_click_11_listener","CommandStatus","getNodeStatus","status","UNDEFINED","STOPED","STARTED","PAUSED","ngContentSelectors","_c0","StepStatusComponent_Template","ɵɵtextInterpolate","NestedTreeControl","MatTreeNestedDataSource","childNode_r4","name","ɵɵelementContainer","ɵɵattribute","parentNode_r5","treeControl","isExpanded","ɵɵclassProp","node","children","dataSource","hasChild","_","length","askForStatusFileContent","detectAndFormatSteps","clearStatus","formatedStatus","formatStepStatus","updateTree","warn","nodes","_transformer","testStatus","steps","forEach","step","commands","values","command","push","id","level","key","StepsComponent_Template","StepsComponent_mat_tree_node_7_Template","StepsComponent_mat_nested_tree_node_8_Template","StepsComponent_Template_button_click_10_listener","StepsComponent_mat_progress_bar_13_Template","EventEmitter","environment","test_r6","ToolbarComponent_div_5_button_7_Template_button_click_0_listener","ɵɵrestoreView","_r8","ctx_r7","ɵɵnextContext","ɵɵresetView","OnStartTest","ToolbarComponent_div_5_button_8_Template_button_click_0_listener","_r10","ctx_r9","OnStopTest","ToolbarComponent_div_5_mat_option_6_Template","ToolbarComponent_div_5_button_7_Template","ToolbarComponent_div_5_button_8_Template","headerForm","formBuilder","httpService","appName","selectChange","startTest","stopTest","socketConnections","testCtrl","control","group","valueChanges","value","find","emit","FormBuilder","outputs","ToolbarComponent_Template","ToolbarComponent_mat_spinner_4_Template","ToolbarComponent_div_5_Template","image","ɵɵsanitizeUrl","ViewComponent_Template","ViewComponent_span_4_Template","ViewComponent_img_7_Template","http","url","apiUrl","getTests","get","getTest","responseType","listenTest","post","ɵɵinject","HttpClient","factory","ɵfac","providedIn","_snackBar","action","duration","open","MatSnackBar","webSocket","Observable","subscriber","socket$","websocketURL","messageSubscription","unsubscribe","production","useMocks","MatGridListModule","MatToolbarModule","MatCardModule","MatButtonModule","MatSelectModule","MatIconModule","MatDividerModule","MatProgressBarModule","MatCheckboxModule","MatTreeModule","MatProgressSpinnerModule","MatSnackBarModule","MatChipsModule","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}